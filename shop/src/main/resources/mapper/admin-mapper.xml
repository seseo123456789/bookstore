<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="adminMapper">

        <resultMap id="resultImg" type="com.green.shop.item.vo.ImgVo">
            <result column="IMG_CODE"                 property="imgCode"/>
            <result column="ORIGIN_FILE_NAME"         property="originFileName"/>
            <result column="ATTACHED_FILE_NAME"       property="attachedFileName"/>
            <result column="IS_MAIN"                  property="isMain"/>
            <result column="ITEM_CODE"                property="itemCode"/>
        </resultMap>



    <!--  다음에 insert형 ITEM_CODE 조회-->
    <select id="selectNextItemCode" resultType="int">
        SELECT IFNULL(MAX(ITEM_CODE), 0) + 1 FROM shop_item;
    </select>


    <!--  상품 등록  -->
    <insert id="insertItem">
        INSERT INTO SHOP_ITEM (
            ITEM_CODE
            , ITEM_NAME
            , ITEM_PRICE
            , ITEM_INTRO
            , CATE_CODE
        )VALUES(
            #{itemCode}
            , #{itemName} <!-- 빈값채우기 위해 넘어온 vo.getName() 호출 / #{}  : 빈갑-->
            , #{itemPrice}
            , #{itemIntro}
            , #{cateCode}
        )
    </insert>


    <insert id="insertImgs">
        INSERT INTO ITEM_IMAGE(
            ORIGIN_FILE_NAME
            , ATTACHED_FILE_NAME
            , IS_MAIN
            , ITEM_CODE
        ) VALUES
             <foreach collection="imgList" item="ImgVo" separator=",">
                (
                    #{ImgVo.originFileName}
                    , #{ImgVo.attachedFileName}
                    , #{ImgVo.isMain}
                    , #{ImgVo.itemCode}
                )
             </foreach>
    </insert>


    <select id="selectBuyList"  resultType="hashmap" parameterType="hashMap" resultMap="buyMapper.resultBuy">
        SELECT
            BUY_CODE
            , MEMBER_ID
            , BUY_PRICE
            , BUY_DATE
            , ROW_NUMBER() over ( order by BUY_CODE) +1000 AS NUM
        FROM SHOP_BUY
        WHERE 1=1
        <if test='searchName!=null and !searchName.equals("")'>
            AND ${searchType} LIKE CONCAT ('%', #{searchName}, '%')
        </if>
        <if test='fromDate!=null and !fromDate.equals("")'>
            AND DATE_FORMAT(BUY_DATE,'%Y-%m-%d') &gt;= #{fromDate}
        </if>
        <if test='toDate!=null and !toDate.equals("")'>
            AND DATE_FORMAT(BUY_DATE,'%Y-%m-%d') &lt;= #{toDate}
        </if>
        ORDER BY BUY_DATE DESC
        LIMIT #{pageStart}, #{perPageNum}
    </select>


    <!--페이징 할 총 데이터수(게시글 총갯수)-->
    <select id="selectBuyCnt" resultType="int">
        SELECT COUNT(BUY_CODE)
        FROM SHOP_BUY
        WHERE 1=1
        <if test='searchName!=null and !searchName.equals("")'>
            AND ${searchType} LIKE CONCAT ('%', #{searchName}, '%')
        </if>
        <if test='fromDate!=null and !fromDate.equals("")'>
            AND DATE_FORMAT(BUY_DATE,'%Y-%m-%d') &gt;= #{fromDate}
        </if>
        <if test='toDate!=null and !toDate.equals("")'>
            AND DATE_FORMAT(BUY_DATE,'%Y-%m-%d') &lt;= #{toDate}
        </if>

    </select>




    <!-- 구매목록 클릭시 구매상세 내역 확인-->
    <select id="selectBuyDetail" resultMap="buyMapper.resultBuy">
        SELECT
        DETAIL.BUY_CODE
        , BUY_CNT
        , MEMBER_ID
        , BUY_PRICE
        , BUY_DATE
        , TOTAL_PRICE
        , ITEM_NAME
        , ATTACHED_FILE_NAME
        FROM shop_buy BUY
        INNER JOIN buy_detail DETAIL
        ON BUY.BUY_CODE=DETAIL.BUY_CODE
        INNER JOIN shop_item ITEM
        ON ITEM.ITEM_CODE=DETAIL.ITEM_CODE
        INNER JOIN item_image IMG
        ON IMG.ITEM_CODE= ITEM.ITEM_CODE
        WHERE IS_MAIN='Y'
        AND BUY.BUY_CODE=#{buyCode}
    </select>



    <!-- 상품 정보 변경 화면에서  상품 목록 조회 -->
    <select id="selectItemList" resultMap="itemMapper.resultItem">
        SELECT
            SS.ITEM_CODE
            , ITEM_NAME
            , ITEM_STOCK
            , ITEM_STATUS
            ,IFNULL(ITEM_STOCK - (
                                    SELECT
                                        SUM(BUY_CNT)
                                        FROM buy_detail DD WHERE DD.ITEM_CODE = SS.ITEM_CODE
                                        GROUP BY DD.ITEM_CODE
                                    ), SS.ITEM_STOCK
                    ) AS CURRENT_STOCK
            , CASE
            WHEN ITEM_STATUS=1 THEN '준비중'
            WHEN ITEM_STATUS=2 THEN '판매중'
            ELSE '매진'
            END AS STR_STATUS
        FROM shop_item SS
    </select>


    <!--  상품 기본 정보 조회하기 -->
    <select id="selectItemDetail" resultMap="itemMapper.resultItem">
        SELECT
            CATE_NAME
            , CATE.CATE_CODE
            , ITEM_NAME
            , ITEM_STOCK
            , ITEM_STATUS
            , SS.ITEM_CODE
            , ORIGIN_FILE_NAME
            , ATTACHED_FILE_NAME
            , IMG_CODE
            , IS_MAIN
            , IFNULL(ITEM_STOCK - (
                                    SELECT
                                    SUM(BUY_CNT)
                                    FROM buy_detail DD WHERE DD.ITEM_CODE = SS.ITEM_CODE
                                    GROUP BY DD.ITEM_CODE
                                    ), SS.ITEM_STOCK
                    ) AS CURRENT_STOCK
        FROM SHOP_ITEM SS
        INNER JOIN item_category CATE
        ON SS.CATE_CODE = CATE.CATE_CODE
        INNER JOIN item_image IMG
        ON SS.ITEM_CODE= IMG.ITEM_CODE
        WHERE SS.ITEM_CODE=#{itemCode}
    </select>

    <select id="selectImg">
        SELECT
        IMG_CODE
        , ORIGIN_FILE_NAME
        , ATTACHED_FILE_NAME
        , IS_MAIN
        FROM ITEM_IMAGE
        WHERE IMG_CODE =#{imgCode}
    </select>

    <update id="updateItem">
        UPDATE SHOP_ITEM SS
        SET
            ITEM_NAME =#{itemName}
            , ITEM_STATUS=#{itemStatus}
            , CATE_CODE=#{cateCode}
            , ITEM_STOCK =#{currentStock} + IFNULL((SELECT SUM(BUY_CNT) FROM buy_detail DD WHERE DD.ITEM_CODE = SS.ITEM_CODE),0)
        WHERE ITEM_CODE=#{itemCode}
    </update>

</mapper>































